La sintaxis de método (también conocida como sintaxis fluida) utiliza métodos de extensión 
incluidos en la clase estática Enumerable o Queryable.

El compilador convierte la sintaxis de consulta en sintaxis de método en tiempo de compilación
por lo que es recomendable utilizar la sintaxis de metodo, esta es la que veremos.

Extructura:
----------------------------------
var resultado = objeto.Metodo();
var resultado = objeto.Metodo(parametro);

ejemplo:
----------------------
var cliente = db.Cliente.Where(  parametro  )
var cliente = db.Cliente.Where(  Func<TipoEntrada,TipoSalida>  )
var cliente = db.Cliente.Where(  Func<Cliente,bool> )
var cliente = db.Cliente.Where(  valorEntrada  => valorSalida )
var cliente = db.Cliente.Where(  cliente => cliente.Nombre=="Adelson"  )
var cliente = db.Cliente.Where(  cliente=> true)
var cliente = db.Cliente.Where(  cliente=> false)

Func<Cliente,bool> )  si encuentra un cliente con ese nombre la salida es true sino false


nota:
(
parametros:  puede ser de tipo int, string, Func<Entrada,Salida>  o puede ser que el metodo no tenga parametro.

los tipos raros debes estudiarlo para saber como funcionan en este caso Func<Entrada,Salida> es un tipo que recibe
un valor lambda. algo asi:   entrada => salida 

Lambda expresion:
---------------------------
a)  (entrada1,salida2...)   =>  { expresion1; expresion2; ... return salida; }
b)  entrada   =>  { expresion1; expresion2; ... return salida; }
c)  entrada   =>  salida
d)  ()   =>  { expresion1; expresion2;  }
e)  ()   =>  expresion1

)