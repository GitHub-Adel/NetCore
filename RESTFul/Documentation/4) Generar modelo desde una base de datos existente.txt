trae la base de datos desde sql hacia c#
-------------------------------------

1) Asegurarse que el project compile sin error con: 
----------------------------------------
	dotnet build

2) correr comando:
--------------------------------------------
	CONFIGURAR CONEXION CON CREDENCIALES DE SQL
	**************
	dotnet ef dbcontext scaffold "Server=tcp:adelson-server.database.windows.net,1433;Initial Catalog=PruebaDB;Persist Security Info=False;User ID=adel809;Password=Amauris809;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" Microsoft.EntityFrameworkCore.SqlServer --project SocialMedia.Api -o Models --force

	CONFIGURAR CONEXION CON CREDENCIALES DE WINDOWS
	**************
	dotnet ef dbcontext scaffold "Server=C2VYW72\SQLEXPRESS;Initial Catalog=SocialmediaDB;integrated security=true;" Microsoft.EntityFrameworkCore.SqlServer --project SocialMedia.Api -o Models --force

3) quitar metodo OnConfiguring del dbcontext.
------------------------------------------------
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Server=C2VYW72\\SQLEXPRESS;Initial Catalog=SocialmediaDB;integrated security=true;");
            }
        }


4) crear propiedad connectionString in appsettings.json
---------------------------------------------------
{
"SocialMediaConnection":"Server=C2VYW72\\SQLEXPRESS;Initial Catalog=SocialmediaDB;integrated security=true"
}


6) inyectar IConfiguration en Startup.cs
-----------------------------------------
    public class Startup
    {
        private readonly IConfiguration configuration;
        public Startup(IConfiguration configuration)
        {
            this.configuration = configuration;
        }



7) configurar la conexion del dbcontext en startup.cs
------------------------------
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {  
		services.AddDbContext<SocialmediaDBContext>(x => x.UseSqlServer(Configuration["SocialMediaConnection"]));


