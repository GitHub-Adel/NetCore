Lo utilizaremos para realizar busquedad por diferentes campos.
ejemplo: cliente, cedula, telefono, id, fecha, etc.

filtrado con parametros
----------------------
request: querystring
api/User/?userId=2&phone=8295295454
[HTTPGET]
Metodo(int? userId, string phone)

un metodo no debe recibir mas de 3 parametros, en su lugar utilice una class, y se mapea
Metodo([FromQuery]UserQueryFilter filters)

filtrado con una clase
-----------------------------------
namespace SocialMedia.Core.QueryFilters
{
    public class UserQueryFilter
    {
        public int? UserId { get; set; }
        public string Firstname { get; set; }
        public string Lastname { get; set; }
        public string Email { get; set; }
        public int? ItemByPage { get; set; }
        public int? CurrentPage { get; set; }
    }
}

api/User/?userId=2&phone=8295295454
[HTTPGET]
Metodo([FromQuery]UserQueryFilter filters)
[FromQuery]: indica que viene por la URL, con el formato querystring y mapea el objeto con esos parametros.


utilizamos IEnumerable para cargar la consulta en memoria, sin ejecutarla y asi poder ir 
agregando los filtros sin ejecutar con el metodo Where().
----------------------------

namespace SocialMedia.Core.Services
{
    public class UserService : IUserService
    {
        public IEnumerable<User> GetByFilters(UserQueryFilter filters)
        {            
            var users = _context.User.AsEnumerable();
            if (users != null)
            {
                if (filters.UserId != null)
                    users = users.Where(x => x.UserId.Equals(filters.UserId));
                if (filters.Firstname != null)
                    users = users.Where(x => x.Firstname.ToLower().Contains(filters.Firstname.ToLower()));
                if (filters.Lastname != null)
                    users = users.Where(x => x.Lastname.ToLower().Contains(filters.Lastname.ToLower()));
                if (filters.Phone != null)
                    users = users.Where(x => x.Phone.Equals(filters.Phone));
            }            
            return users;
           
        }





namespace SocialMedia.Api.Controllers
{
    [ApiController]
    [Route("api/[Controller]")]
    public class UserController : ControllerBase
    {

        [HttpGet]
        public  IActionResult GetUsers([FromQuery]UserQueryFilter filters)
        {
            var result = _service.GetByFilters(filters);
        }


[FromQuery],[Frombody] : indica cual es el origen de los parametros.

