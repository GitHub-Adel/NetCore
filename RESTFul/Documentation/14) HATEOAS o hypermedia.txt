Es devolver una respuesta por el controlador que no solo contenga el objeto sino tambien los enlaces
para manipular ese recurso y las relacionesm la idea es que el links contenga el endpoint,description
y method(GET, POST,PUT,DELETE), para que el programador sepa. 
------------------------------------

1) Ponerle un nombre al metodo a llamar
2) agregar una propiedad de tipo Dictionary<string,object> al UserDTO
3) mapear a un tipo List<UserDTO>


-----------------------------------------------


1) Ponerle un nombre al metodo a llamar
-----------------------------------------------
        [HttpPost(Name=nameof(SaveUser))]
        public async Task<IActionResult> SaveUser(UserDTO userDTO)
        {

        }


2) agregar una propiedad de tipo Dictionary<string,object> al UserDTO
-----------------------------------------------
namespace SocialMedia.Core.DTOs
{
    public class UserDTO
    {
        public string Firstname { get; set; }

        public Dictionary<string, object> Links { get; set; }=new Dictionary<string, object>();        
    }
}



3) mapear a un tipo List<UserDTO> y agregar los links a cada item
-----------------------------------------------
        public IActionResult GetUsers([FromQuery] UserQueryFilter filters)
        {
            //mapeo usersPagedList al usersDTO
            var usersDTO = _mapper.Map<List<UserDTO>>(usersPagedList);
            //agrego los links para HATEOAS O HYPERMEDIA de este recurso
            usersDTO.ForEach(x=>{
                x.Links.Add("Href:",Url.Link(nameof(SaveUser),new{FirstName=x.Firstname}));
                x.Links.Add("Rel:","Edit-user");
                x.Links.Add("Method:","PUT");
            });
            //para ir listando la respuesta en formato clave,valor ej:  
            var response = new Dictionary<string, object>()
            {
                {"Users",usersDTO}
            };
            return Ok(response);
        }





