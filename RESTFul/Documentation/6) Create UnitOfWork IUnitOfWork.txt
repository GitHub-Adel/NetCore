esta interface proveera todos los repositories a traves de properties.
esta es la encargada de llamar el metodo SaveChangeAsync()
debera ser inyectada por el startup.cs

-------------------------------------------------------
interface: define los method, solo la firma. (abstraction)

1) create file
2) IUnitOfWork.cs
3) elegir interface


namespace SocialMedia.Core.Interface
{
    public interface IUnitOfWork:IDisposable
    {
        IUserRepository UserRepo {get;}
        Task SaveChangeAsync();
    }
}



===============================================

1) create file
2) UnitOfWork.cs
3) elegir class

namespace SocialMedia.Infrastructure.Repository
{
    public class UnitOfWork : IUnitOfWork
    {
        public SocialmediaDBContext _context { get; }
        public UnitOfWork(SocialmediaDBContext _context)
        {
            this._context = _context;
            UserRepo= new UserRepository(_context);
        }

        public IUserRepository UserRepo { get; }

        public void Dispose()=> _context?.Dispose();        
        public async Task SaveChangeAsync() => await _context.SaveChangesAsync();
        
    }
}


