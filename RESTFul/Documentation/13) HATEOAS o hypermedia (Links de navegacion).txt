Es una clase llamada Link con 3 propiedades, el objetivo es que el objeto a devolver, contenga
los enlaces necesarios para la navegacion de ese objeto y los relacionados.
------------------------------------

1) crear class Link
------------------------------
namespace SocialMedia.Api.DTOs
{
    public class LinkDTO
    {
        public string Href { get; set; } //Ruta o endpoint ej: https://localhost:5001/api/User
        public string Rel { get; set; }  //lo que hace el endpoint ej: Actualizar
        public string Method { get; set; } //verbo http ej: POST,GET ETC.
    }
}



2) agregar una propiedad links a las clases DTOs que queramos y un constructor
   para crear los links de navegacion
--------------------------
namespace SocialMedia.Api.DTOs
{
        public class UsuarioDTO
        {
            public int UsuarioId { get; set; }
            public string Nombre { get; set; }
            public IList<Link2> Links { get; set; } = new List<Link2>();
        }


3) modo de uso en el controller
-----------------------------------------------
            //le pongo un nombre al metodo para poder generar el link con Url.Link(nameof(metodo
            [HttpGet(Name = nameof(GetRoles))]
            public IActionResult GetRoles([FromQuery] RoleQueryFilter filters)
            {
                //obtengo la collection de usuarios
                var usuarioDTOs = _usuario.Get(filters);
                //HATEOAS AND HYPERMEDIA
                usuarioDTOs.ForEach(x =>
                {                        
                    //a cada item le pongo un link, para actualizarlo o eliminarlo
		    x.Links=new List<Link>(){
                        new Link{Rel="Actualizar",Method="PUT",Href=Url.Link(nameof(UpdateRole), new { id = x.RoleId })}
                    };
                });

		//lleno los links general, para crear, ver el usuario proximo o el anterior etc.
                usuarioDTOs.Links=new List<Link>(){
                     new Link{Rel="Crear",Method="POST",Href=Url.Link(nameof(AddRole), new { })},
                     new Link{Rel="Proximo",Method="GET",Href=Url.Link(nameof(GetRoles), new {CurrentPage=response.Navegation.Next})},
                     new Link{Rel="Anterior",Method="GET",Href=Url.Link(nameof(GetRoles), new { CurrentPage=response.Navegation.Previous})}
                };

                return Ok(usuarioDTOs);
            }



