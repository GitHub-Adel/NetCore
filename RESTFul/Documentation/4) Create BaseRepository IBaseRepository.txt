
Esta interface contiene los metodos base del crud y aquellos que se repiten, sera hereda por todas 
aquellas interfaces que la necesitan como: IUserRepository.

interface: define los method, solo la firma. (abstraction)
=========================================

1) create file
2) IBaseRepository.cs
3) elegir interface


namespace SocialMedia.Core.Interface
{
    //generic interface
    public interface IBaseRepository<T> where T: class
    {       
        void Add(T entity);
    }







repository: implement interface methods.(encapsulation) 
===============================================
este BaseRepository debe ser abstract porque es generic y no debe ser inyectado, todos los metodos deben 
ser virtuales para que se puedan sobre escribir, ningun UserRepository debe llamar el metodo SaveChange(), 
este debe ser llamado en UserService con IUnitOfWork.

1) create file
2) BaseRepository.cs
3) show class


namespace SocialMedia.Infrastructure.Repository
{
    public abstract class BaseRepository<T> : IBaseRepository<T> where T: class
    {
        //para hacer _entity.Add en lugar de _context.Set<T>().Add
        protected readonly DbSet<T> _entity;
        //inicializa la propiedad _entity con el DbSet del _context
        public BaseRepository(SocialmediaDBContext _context) { _entity = _context.Set<T>();}
        public virtual void Add(T entity)  {_entity.Add(entity);}

    }


}

