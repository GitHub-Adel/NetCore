sirve de intermediario entre la vista y el modelo, si la vista necesita algo del modelo 
se lo solicita al controlador y el controlador se lo retorna

carpeta Home con una vista Index
---------------------------------
Home
       Index.cshtml


controlador de la carpeta Home
--------------------------
public class HomeController  : Controller
{
       public IActionResult  Index()
       {
           return view();
       }

       public IActionResult  OtroMetodo(string id)
       {
           return id;
       }
}

1) Home: es una carpeta que puede tener varias vistas dentro
2) IActionResult: interface para devolver diferente tipo de datos, uselo siempre
3) Index(): Cada vista tiene un metodo, ambos se llaman igual, quien muestra la vista al usuario es el 
                   controlador.
4) view(): este metodo devuelve una vista que tenga el mismo nombre del metodo, 
	use View("vista") en caso que ponga un nombre al controlador que sea diferente al de la vista


https://localhost:50001/CarpetaDeVista/NombreMetodo
------------------------------------------------------
5) ejecuta el metodo  NombreMetodo del controlador 
    NombreVistaController este metodo no  recibe parametro.

https://localhost:50001/CarpetaDeVista/NombreMetodo/?Nombreparametro=valor
------------------------------------------------------
6) ejecuta el metodo  NombreMetodo del controlador 
    CarpetaDeVistaController este metodo recibe un parametro.

7) IActionResult: esta es una interface la cual sirve para retornar cualquier clase que la implement



fin